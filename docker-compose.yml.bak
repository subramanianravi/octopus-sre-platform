
services:
  # ==============================================
  # üß† OCTOPUS BRAIN (Central Coordinator)
  # ==============================================
  octopus-brain:
    build:
      context: .
      dockerfile: containers/brain/Dockerfile
    container_name: octopus-brain
    environment:
      - OCTOPUS_COMPONENT=brain
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "8080:8080"
      - "8081:8081"  # Metrics port
    volumes:
      - brain_data:/app/data
      - brain_logs:/app/logs
    networks:
      - octopus_ocean
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

  # ==============================================
  # üêô SPECIALIZED TENTACLES
  # ==============================================
  detection-tentacles:
    build:
      context: .
      dockerfile: containers/tentacle/Dockerfile
    environment:
      - OCTOPUS_COMPONENT=tentacle
      - TENTACLE_TYPE=detection
      - BRAIN_URL=http://octopus-brain:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - octopus-brain
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    networks:
      - octopus_ocean
    restart: unless-stopped

  response-tentacles:
    build:
      context: .
      dockerfile: containers/tentacle/Dockerfile
    environment:
      - TENTACLE_TYPE=response
      - BRAIN_URL=http://octopus-brain:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - octopus-brain
    deploy:
      replicas: 2
    networks:
      - octopus_ocean
    restart: unless-stopped

  learning-tentacles:
    build:
      context: .
      dockerfile: containers/tentacle/Dockerfile
    environment:
      - TENTACLE_TYPE=learning
      - BRAIN_URL=http://octopus-brain:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - octopus-brain
    deploy:
      replicas: 1
    networks:
      - octopus_ocean
    restart: unless-stopped

  security-tentacles:
    build:
      context: .
      dockerfile: containers/tentacle/Dockerfile
    environment:
      - TENTACLE_TYPE=security
      - BRAIN_URL=http://octopus-brain:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - octopus-brain
    deploy:
      replicas: 1
    networks:
      - octopus_ocean
    restart: unless-stopped

  # ==============================================
  # üñ•Ô∏è DASHBOARD
  # ==============================================
  octopus-dashboard:
    build:
      context: .
      dockerfile: containers/dashboard/Dockerfile
    container_name: octopus-dashboard
    ports:
      - "3000:80"
    networks:
      - octopus_ocean
    restart: unless-stopped
    depends_on:
      - octopus-brain

  # ==============================================
  # üìä MONITORING STACK
  # ==============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: octopus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - octopus_ocean
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: octopus-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-octopus}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - octopus_ocean
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: octopus-jaeger
    ports:
      - "16686:16686"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - octopus_ocean
    restart: unless-stopped

  # ==============================================
  # üóÑÔ∏è INFRASTRUCTURE SERVICES
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: octopus-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-octopus-redis}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - octopus_ocean
    restart: unless-stopped

# ==============================================
# üåä VOLUMES & NETWORKS
# ==============================================
volumes:
  brain_data:
  brain_logs:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  octopus_ocean:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
